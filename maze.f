
HEX 

3E8FA000 CONSTANT FRAME_BUFFER
00000400 CONSTANT WIDTH
00000300 CONSTANT HEIGHT
FFFFFFFF CONSTANT WHITE

: ITER 2DUP ! 4 + ;
: ITER2 2DUP ! 4 WIDTH * + ;

(n_colonna n_riga -- indirizzo)
: FIND_ADDRESS 4 WIDTH * * SWAP 4 * FRAME_BUFFER + + ;

: DRAW_ROW  FIND_ADDRESS FIND_ADDRESS >R WHITE SWAP BEGIN ITER DUP R> = UNTIL RDROP 
2DROP ;

: DRAW_COLUMN FIND_ADDRESS FIND_ADDRESS >R WHITE SWAP BEGIN ITER2 DUP R> = UNTIL RDROP 2DROP ;

( n_colonna_start n_riga_start n_colonna_end n_riga_end -- )
: ROW 2OVER 2OVER SWAP ROT = IF 2DROP DRAW_ROW THEN ;
: COLUMN 2OVER 2OVER -ROT 2SWAP = IF 2DROP DRAW_COLUMN THEN ;


\ ( n_col_end n_row_end n_col_start n_riga_start -- )
: DRAW_ROW  FIND_ADDRESS SWAP ROT SWAP FIND_ADDRESS INDEX ! WHITE SWAP BEGIN ITER DUP INDEX @ = UNTIL 2DROP ;


\ (scrive una matrice di 8 righe)
\ ( n_col_end n_row_end n_col_start n_riga_start -- )
: ROW_ITER DUP 8 + COUNTER ! BEGIN 2OVER 2OVER DRAW_ROW ROT 1 + SWAP 1 + ROT SWAP DUP COUNTER @ = UNTIL 2DROP 2DROP ;


0 0 399 0 ROW
0 299 399 299 ROW
0 0 0 149 COLUMN
0 155 0 299 COLUMN
399 0 399 149 COLUMN
399 155 399 399 COLUMN 

