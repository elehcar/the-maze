DECIMAL
: 2>R >R >R ;
: 2R> R> R> ;
: 3DUP DUP 2OVER ROT ;
: R@ R> DUP >R ;
: C, HERE @ C! 1 HERE +! ;

VARIABLE END_LOOP
VARIABLE BASE_ADDR
: FONT CREATE HERE 8 256 * ALLOT DOES> SWAP 8 * + ;

\ ( baseaddr c c c c c c c c cindex -- baseaddr )
\ : FONT-SHAPE 9 PICK SWAP 8 * + DUP 8 + SWAP END_LOOP1 ! BEGIN DUP ROT SWAP C! 1 -  DUP END_LOOP1 @ = UNTIL DROP ;
: FONT-SHAPE 9 PICK SWAP 8 * + DUP 8 + END_LOOP ! BEGIN DUP ROT SWAP C! 1 + DUP END_LOOP @ = UNTIL DROP ;
 


\ ( baseaddr cindex1 cindex2 -- )
\ : FONT-SHAPE-COPY  >R OVER SWAP 8 * + SWAP R> 8 * + 8 CMOVE ; 

\ : FONT-SHAPES OVER 2>R FONT-SHAPE 2R> TUCK  1 + SWAP END_LOOP ! BEGIN 3DUP FONT-SHAPE-COPY 1 + DUP END_LOOP @ = UNTIL RDROP ;

: BINARY 2 BASE ! ;

BINARY
FONT C64font BASE_ADDR !

BASE_ADDR @
00000000 
00111100
01100110
01100110
01111110
01100110
01100110
00000000
CHAR A FONT-SHAPE

00000000
01111110
01100000
01111110
01100000
01100000
01100000
00000000
CHAR F FONT-SHAPE

00000000
01111110
00011000
00011000
00011000
00011000
01111110
00000000
CHAR I FONT-SHAPE

00000000
01100000
01100000
01100000
01100000
01100000
01111110
00000000
CHAR L FONT-SHAPE

00000000
00111100
01100110
01100110
01100110
01100110
00111100
00000000
CHAR O FONT-SHAPE

00000000
01100110
01101100
01111000
01101100
01100110
01100110
00000000
CHAR K FONT-SHAPE

00000000
00111100
01100000
00110000
00011000
00001100
01111000
00000000
CHAR S FONT-SHAPE

00000000
01111110
00011000
00011000
00011000
00011000
00011000
00000000
CHAR T FONT-SHAPE

00000000
01111110
01100110
01100110
01111100
01101100
01100110
00000000
CHAR R FONT-SHAPE


\ aggiungere lettere per the maze
DROP
HEX



   




